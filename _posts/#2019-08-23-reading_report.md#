山根さんの卒論(コマンドラインツール作成ライブラリThorによるhikiutilsの書き換え)でoptparseとThorが比較されていたので読んだ。

Thor

コマンドラインツールの作成を支援するライブラリのこと。

gitやbundlerのようにサブコマンドを含むコマンドラインツールを簡単に作成することが可能

基本的な流れ

1.Thorを継承したクラスのメソッドがコマンドになる

2.クラス.start(ARGV)でコマンドラインの処理をスタートする

startに渡す引数が空の場合、Thorはクラスのヘルプリストを出力。

サブコマンドやサブサブコマンドを容易に作ることができる。

optparse

getoptよりも簡便であり、柔軟性に富み、かつ強力なコマンドライン解析ライブラリ。

OptionParserのインスタンスでコマンドラインを解析するので、より宣言的なスタイルのコマンドライン解析手法である。

これを使うことで、GNU/POSIX構文でオプションを指定できるだけでなく、使用法やヘルプメッセージの生成もできる。

利用頻度はあまり高くないが、古くから開発されており、利用例が広く紹介されている。

基本的な流れ

1.OptionParserオブジェクトoptを生成

2.オプションを取り扱うブロックをopt.onに登録

3.opt.parse(ARGV)でコマンドラインを実際にparse


OptionParserはコマンドラインのオプションを取り扱うためのクラスなので、オブジェクトoptを生成されopt.onにコマンドを登録できる。

しかし、OptionParser#onにはコマンドが登録されているだけであるため、OptionParser#parseが呼ばれたとき、コマンドラインにオプションが指定されていれば実行される。

optparseはデフォルトで-helpと-versionのオプションを認識する
